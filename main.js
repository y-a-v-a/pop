(()=>{let t=0;const e=150,a=document.getElementById("canvas"),n=Math.round(Math.floor(window.innerHeight/e)*Math.floor(window.innerWidth/e));function o(n){let s=document.createElement("div");const i="box-"+n;s.classList.add("js-box"),s.classList.add("box"),s.classList.add("initial"),s.classList.add(i);const d=Math.floor(Math.random()*e)+e,l=Math.round(d/2);return s.style.top=Math.max(-l,Math.floor(Math.random()*(window.innerHeight-l)))+"px",s.style.left=Math.max(-l,Math.floor(Math.random()*(window.innerWidth-l)))+"px",s.style.width=d+"px",s.style.height=d+"px",s.style.lineHeight=d+"px",s.style.animationName=i,s.style.animationDelay=Math.round(1500*Math.random())+"ms",s.addEventListener("click",(e=>{e.target.classList.contains("is-clicked")||(e.target.classList.add("is-clicked"),e.target.classList.remove("initial"),e.target.classList.add("stage1"),window.setTimeout((()=>{e.target.classList.remove("stage1"),e.target.classList.add("stage2"),window.setTimeout((()=>{s.style.fontSize="2em",e.target.classList.remove("stage2"),e.target.classList.add("stage3"),window.setTimeout((()=>{!function(){const e=o(t++);r(t).then((()=>{a.appendChild(e)}))}(),e.target.remove()}),180)}),140)}),100))})),s}const s=(function(t,...e){return function(...a){let n=[t[0]];return e.forEach((function(e,o){let s=a[e];n.push(s,t[o+1])})),n.join("")}})`${0}% {transform: translate(${1}px, ${2}px) rotate(${3}deg) scaleX(${4});}`;function r(t){return new Promise(((e,a)=>{const n=Math.round(360*Math.random()),o=0==Math.round(Math.random())?-1:1,r=[...Array(5)].map(((t,e)=>Math.ceil(10*Math.random())+14*(e+1))).sort(),i=`@keyframes box-${t} {\n      from {\n        transform: translate(0px, 0px) rotate(${n}deg) scaleX(${o})\n      }\n      ${r.map((t=>s(t,Math.round(12*Math.random())-6,Math.round(12*Math.random())-6,n,o))).join("")}\n      to {\n        transform: translate(0px, 0px) rotate(${n}deg) scaleX(${o});\n      }\n    }`,d=`.box-${t} {\n      transform: translate(0px, 0px) rotate(${n}deg) scaleX(${o})\n    }\n    ${i}`,l=document.createElement("style");l.textContent=d,document.head.insertAdjacentElement("beforeend",l),e()}))}const i=[];for(let t=0;t<n;t++)i.push(r(t));Promise.all(i).then((()=>{for(let e=0;e<n;e++){const e=o(t++);a.appendChild(e)}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,